<Application x:Class="Karen.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:local="clr-namespace:Karen"
             ShutdownMode="OnExplicitShutdown">
    <Application.Resources>

        <!--
            Note that this application does not have a StartupUri declared, so no Window is automatically loaded.
            Also, the ShutdownMode was set to explicit, so we have to close the application programmatically
        -->
        
        <!-- Light theme by default -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Light.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/favicon.ico"
                    ToolTipText="LANraragi for Windows"
                    PopupActivation="All">

                <tb:TaskbarIcon.TrayPopup>
                    <!-- the control will be put into a popup with an explicit DataContext -->
                    <local:KarenPopup/>
                </tb:TaskbarIcon.TrayPopup>

            </tb:TaskbarIcon>

            <local:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            
            <Style TargetType="{x:Type ContentControl}" x:Key="LogoIcon">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Viewbox Width="{Binding Width, RelativeSource={RelativeSource AncestorType=ContentControl}}">
                                <Canvas x:Name="LogoCanvas"  Width="575.73334" Height="595.7832">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Canvas.Resources/>
                                    <Canvas Name="layer1">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="203.95595" Y="143.76661"/>
                                        </Canvas.RenderTransform>
                                        <Canvas Name="g4804" Opacity="1">
                                            <Canvas.RenderTransform>
                                                <MatrixTransform Matrix="0.26458333 0 0 0.26458333 245.16359 50.724944"/>
                                            </Canvas.RenderTransform>
                                            <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path4138" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}" Data="m 1147.4472 509.91359 c -16.7091 40.43137 -21.402 71.92264 -26.0097 115.47152 L 1529 796.51953 l -441 189 -441 -189 246.3963 -118.73012 C 879.13122 635.01105 856.65332 610.74295 859.68465 565.65262 L 590 681.51953 c -23.33333 10.66667 -42.16667 26.66667 -56.5 48 -14.33333 21.33333 -21.5 44.66667 -21.5 70 v 399.99997 l -434 186 c -23.333333 10.6667 -42.166667 26.6667 -56.5 48 -14.3333333 21.3334 -21.5 44.6667 -21.5 70 v 416 c 0 24 6.3333333 46.3334 19 67 12.666667 20.6667 30 36.3334 52 47 l 448 224 c 16.66667 9.3334 35.66667 14 57 14 21.33333 0 40.33333 -4.6666 57 -14 l 448 -224 c 3.3333 -1.3333 5.6667 -2.6666 7 -4 1.3333 1.3334 3.6667 2.6667 7 4 l 448 224 c 16.6667 9.3334 35.6667 14 57 14 21.3333 0 40.3333 -4.6666 57 -14 l 448 -224 c 22 -10.6666 39.3333 -26.3333 52 -47 12.6667 -20.6666 19 -43 19 -67 v -416 c 0 -25.3333 -7 -48.6666 -21 -70 -14 -21.3333 -33 -37.3333 -57 -48 l -434 -186 V 799.51953 c 0 -25.33333 -7.1667 -48.66667 -21.5 -70 -14.3333 -21.33333 -33.1667 -37.33333 -56.5 -48 C 1459.6434 624.0254 1280.9173 564.43796 1147.4472 509.91359 Z M 1536 933.51953 v 265.99997 l -384 165 v -267 z m -960 377.99997 404 173 -404 173 -404 -173 z m 1024 0 404 173 -404 173 -404 -173 z m -576 294 v 314 l -384 192 v -342 z m 1024 0 v 314 l -384 192 v -342 z">
                                                <Path.RenderTransform>
                                                    <TranslateTransform X="-1697.4597" Y="-754.82657"/>
                                                </Path.RenderTransform>
                                            </Path>
                                            <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path4157" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}" StrokeThickness="70" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Opacity="1" Data="M -742.04433 -415.20311 C -556.51322 -799.0999 -29.535275 -808.24903 328.76022 -596.89504 -16.437856 -739.81503 -348.61672 -654.85338 -530.63073 -418.54253 -650.19851 -278.50345 -636.40491 -116.55913 -597.8874 59.518874 -790.12964 -57.84971 -825.56554 -240.14192 -742.04433 -415.20311 Z"/>
                                        </Canvas>
                                    </Canvas>
                                </Canvas>
                            </Viewbox>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="MDLButton">
                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource WindowForeground}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="2" SnapsToDevicePixels="True">
                                <ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}"/>
                    </Trigger>
                    <Trigger Property="IsPressed"  Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}"/>
                        <Setter Property="Background" Value="{DynamicResource ButtonBorderColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>

    </Application.Resources>
</Application>
