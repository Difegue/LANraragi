on: 
  push:
    branches:
    - dev
    - test-builds
    - actions-testing
env:
  REGISTRY_IMAGE: difegue/lanraragi
  TAG: nightly
name: Continuous Delivery 
jobs:

  buildDockerArm:
    name: Build Docker Images (ARM)
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    steps:
    - uses: actions/checkout@v5
    - name: Docker builder
      uses: ./.github/actions/docker-builder
      with:
        platform: ${{ matrix.platform }}
        docker-username: ${{ secrets.DOCKER_USERNAME }}
        docker-password: ${{ secrets.DOCKER_PASSWORD }}

  buildDockerx86:
    name: Build Docker Images (x86)
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/386
          - linux/amd64
    steps:
    - uses: actions/checkout@v5
    - name: Docker builder
      uses: ./.github/actions/docker-builder
      with:
        platform: ${{ matrix.platform }}
        docker-username: ${{ secrets.DOCKER_USERNAME }}
        docker-password: ${{ secrets.DOCKER_PASSWORD }}

  mergeDocker:
    name: Merge Docker Images
    runs-on: ubuntu-24.04
    needs:
      - buildDockerArm
      - buildDockerx86
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/docker-merge
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}

  buildNightlyMSYS2:
    name: Build and export native Windows version
    runs-on: windows-2025
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup MSYS2 UCRT64
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
    - name: Install deps
      shell: msys2 {0}
      run: |
        ./tools/build/windows/install-deps.sh
    - name: Build
      shell: msys2 {0}
      run: |
        ./tools/build/windows/install.sh
        ./tools/build/windows/cleanup.sh
        ./tools/build/windows/create-dist.sh
    - name: Enable UTF-8
      run: ./tools/build/windows/utf8-support.ps1
    - name: Find MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Build MSI Installer
      run: |
        choco uninstall wixtoolset
        choco install wixtoolset --version 3.14.0 --allow-downgrade --force
        ./tools/build/windows/build-installer.ps1
    - name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: LANraragi.msi
        path: ./tools/build/windows/Karen/Setup/bin/LANraragi.msi
        if-no-files-found: error
