on: push
name: Continuous Delivery 
jobs:
  buildNightlyDocker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm32v6, arm64v8]
    steps:
    - uses: actions/checkout@master
    - name: Build/Push Nightly Docker image
      env:
        ARCH: ${{ matrix.arch }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
        chmod +x ./tools/Docker-multiarch/build-docker.sh
        npm run docker-build-multiarch ${ARCH} nightly
  pushNightlyDocker:
    name: Push Multi-Arch manifest
    runs-on: ubuntu-latest
    needs: buildNightlyDocker
    steps:
    - uses: actions/checkout@master
    - name: Login and Push to Docker Hub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
        chmod +x ./tools/Docker-multiarch/push-docker.sh
        npm run docker-push-multiarch nightly
  buildNightlyWSL:
    name: Build Nightly Windows Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build Base Docker Image
      uses: actions/docker/cli@8cdf801b322af5f369e00d85e9cf3a7122f49108
      with:
        args: build -t difegue/lanraragi -f ./tools/DockerSetup/Dockerfile .
    - name: Build WSL zip
      uses: ./.github/action-wslbuild
    - name: Upload Installer to MEGA
      uses: difegue/action-megacmd@master
      env:
        PASSWORD: ${{ secrets.MEGA_PASSWORD }}
        USERNAME: ${{ secrets.MEGA_USERNAME }}
      with:
        args: put -c LANraragi_Windows_Installer.zip Windows_Nightlies/${GITHUB_SHA}/LRR_Nightly_Windows.zip
