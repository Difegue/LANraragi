on: 
  push:
    branches:
    - dev
    - test-builds
    - actions-testing
name: Continuous Delivery 
jobs:

  buildDockerARM:
    name: Build Docker Images (ARM)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - uses: actions/cache@v4
      with: 
        path: /tmp/buildxcache
        key: ${{ runner.os }}-docker-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-buildx-
    - name: Build ARMv6/ARMv7 images
      run: |
        apt-get update && apt-get upgrade 
        docker buildx build \
          --platform linux/arm/v6,linux/arm/v7 \
          --output "type=image,push=false" \
          --tag difegue/lanraragi:nightly \
          --cache-from "type=local,src=/tmp/buildxcache" \
          --cache-to "type=local,dest=/tmp/buildxcache" \
          --file ./tools/build/docker/Dockerfile .

  buildNightlyDocker:
    name: Bundle and Push Docker Image
    needs: buildDockerARM
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - uses: actions/cache@v4
      with: 
        path: /tmp/buildxcache
        key: ${{ runner.os }}-docker-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-buildx-
    - name: Docker Login
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
    - name: Build/Push Nightly Docker
      run: |
        docker buildx build \
          --platform linux/386,linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7 \
          --output "type=image,push=true" \
          --tag difegue/lanraragi:nightly \
          --cache-from "type=local,src=/tmp/buildxcache" \
          --cache-to "type=local,dest=/tmp/buildxcache" \
          --file ./tools/build/docker/Dockerfile .

  buildNightlyMSYS2:
    name: Build and export native Windows version
    runs-on: windows-2025
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup MSYS2 UCRT64
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
    - name: Install deps
      shell: msys2 {0}
      run: |
        ./tools/build/msys2/install-deps.sh
    - name: Build
      shell: msys2 {0}
      run: |
        ./tools/build/msys2/install.sh
        ./tools/build/msys2/cleanup.sh
        ./tools/build/msys2/create-dist.sh
    - name: Enable UTF-8
      run: ./tools/build/msys2/utf8-support.ps1
    - name: Find MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Build MSI Installer
      run: |
        choco uninstall wixtoolset
        choco install wixtoolset --version 3.14.0 --allow-downgrade --force
        ./tools/build/msys2/build-installer.ps1
    - name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: LANraragi.msi
        path: ./tools/build/msys2/Karen/Setup/bin/LANraragi.msi
        if-no-files-found: error
