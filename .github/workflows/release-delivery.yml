on: 
  release:
    types: [published]
name: New Version Release
jobs:
  uploadWSLRelease:
    name: Add WSL distro package to release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Untagged Docker Build
      run: |
        docker build -t difegue/lanraragi -f ./tools/build/docker/Dockerfile .
    - name: Build WSL zip
      uses: ./.github/action-wslbuild
    - name: Upload Installer to release
      uses: JasonEtco/upload-to-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: LANraragi.msi application/octet-stream
  buildLatestDocker:
    name: Build Latest Docker image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm32v6, arm64v8]
    steps:
    - uses: actions/checkout@master
    - name: Build/Push Latest Docker image and tag with Release number
      env:
        ARCH: ${{ matrix.arch }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
        chmod +x ./tools/build/docker-multiarch/build-docker.sh
        npm run docker-build-multiarch ${ARCH} latest
        TAG=${GITHUB_REF:10:10}
        npm run docker-build-multiarch ${ARCH} $TAG
  pushLatestDocker:
    name: Push Multiarch Manifest
    runs-on: ubuntu-latest
    needs: buildLatestDocker
    steps:
    - uses: actions/checkout@master
    - name: Push to Docker Hub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
        chmod +x ./tools/build/docker-multiarch/push-docker.sh
        npm run docker-push-multiarch latest
        TAG=${GITHUB_REF:10:10}
        npm run docker-push-multiarch $TAG
